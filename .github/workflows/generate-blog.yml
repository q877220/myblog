name: Generate Blog from ChatGPT

on:
  schedule:
    # 每天早上8点执行 (UTC时间，对应北京时间16点)
    - cron: '* * * * *'
  workflow_dispatch:
    # 允许手动触发

jobs:
  generate-blog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai python-dotenv

      - name: Generate blog content
        id: generate_content
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python -c """import os
import openai
import datetime

def generate_blog():
    # 设置OpenAI API密钥
    openai.api_key = os.getenv('OPENAI_API_KEY')

    # 获取当前日期
    current_date = datetime.datetime.now().strftime('%Y-%m-%d')

    # 构建提示
    prompt = f"请为我的技术博客生成一篇关于当前热点技术的文章，发布日期为{current_date}。\n"
    prompt += "文章应该包括以下部分：\n"
    prompt += "1. 引人入胜的标题\n"
    prompt += "2. 简短的介绍\n"
    prompt += "3. 技术要点详解\n"
    prompt += "4. 实际应用案例\n"
    prompt += "5. 结论和展望\n"
    prompt += "文章风格要专业但不失通俗易懂，适合技术博客读者。\n"
    prompt += "请确保内容是原创的，不要抄袭。\n"
    prompt += "输出格式请使用Markdown，并包含适当的YAML Front Matter，如下所示：\n"
    prompt += "+++\n"
    prompt += "date = 'YYYY-MM-DDTHH:MM:SS+08:00'\n"
    prompt += "draft = false\n"
    prompt += "title = '文章标题'\n"
    prompt += "+++\n"

    # 调用OpenAI API
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "你是一位技术博客作者，擅长撰写通俗易懂的技术文章。"},
            {"role": "user", "content": prompt}
        ],
        max_tokens=2000
    )

    # 提取生成的内容
    content = response['choices'][0]['message']['content']

    # 提取标题用于文件名
    title_line = [line for line in content.split('\n') if line.startswith('title =')][0]
    title = title_line.split('=')[1].strip().replace('\'', '').replace('"', '')
    slug = '-'.join(title.lower().split())

    # 保存为Markdown文件
    file_path = f"content/posts/{current_date}-{slug}.md"
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)

    print(f"博客文章已生成：{file_path}")
    return file_path

generate_blog()
"""

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'Auto-generate blog post'
          git push origin main

      - name: Trigger deployment workflow
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/q877220/myblog/actions/workflows/deploy.yml/dispatches \
          -d '{"ref":"main"}'